Total:32
30
2
Tests for Operations on Todo Application database

32
30
2
An Express instance should be exported from the 'app.js' file using the default export syntax
2 ms 
The GET request to the path '/todos/?status=TO%20DO' should return the list of all todos whose status is 'TO DO' as a response
29 ms 
The GET request to the path '/todos/?priority=HIGH' should return the list of all todos whose priority is 'HIGH' as a response
6 ms 
The GET request to the path '/todos/?priority=HIGH&status=IN%20PROGRESS' should return the list of all todos whose priority is 'HIGH' and status is 'IN PROGRESS' as a response
4 ms 
The GET request to the path '/todos/?category=WORK&status=DONE' should return the list of all todos whose category is 'WORK' and status is 'DONE' as a response
7 ms 
The GET request to the path '/todos/?category=LEARNING&priority=HIGH' should return the list of all todos whose category is 'LEARNING' and priority is 'HIGH' as a response
5 ms 
The GET request to the path '/todos/?category=HOME' should return the list of all todos whose category is 'HOME' as a response
7 ms 
The GET request to the path '/todos/?search_q=Buy' should return the list of all todos whose todo contains 'Buy' text as a response
6 ms 
The GET request to the path '/todos/:todoId/' should return a specific todo based on the todo ID as a response
3 ms 
The GET request to the path '/agenda/?date=:date' should return a list of all todos of the specific date as a response upon success
5 ms 
The GET request to the path '/todos/' with invalid todo status should return '400' as status code and 'Invalid Todo Status' text as a response to the request
5 ms 
The GET request to the path '/todos/' with invalid todo priority should return '400' as status code and 'Invalid Todo Priority' text as a response to the request
5 ms 
The GET request to the path '/todos/' with invalid todo category should return '400' as status code and 'Invalid Todo Category' text as a response to the request
4 ms 
The GET request to the path '/agenda/' with an invalid date query should return '400' as status code and 'Invalid Due Date' text as a response to the request
5 ms 
The POST request to the path '/todos/' should return the 'Todo Successfully Added' text as a response upon success
250 ms 
The database should be updated on the post request
9 ms 
The POST request to the path '/todos/' with invalid todo status should return '400' as status code and 'Invalid Todo Status' text as a response to the request
16 ms 
The POST request to the path '/todos/' with invalid todo priority should return '400' as status code and 'Invalid Todo Priority' text as a response to the request
8 ms 
The POST request to the path '/todos/' with invalid todo category should return '400' as status code and 'Invalid Todo Category' text as a response to the request
11 ms 
The POST request to the path '/todos/' with invalid due date should return '400' as status code and 'Invalid Due Date' text as a response to the request
7 ms 
The PUT request to the path '/todos/:todoId/' with 'status' property in the body should return the 'Status Updated' text as a response upon success
227 ms 
The PUT request to the path '/todos/:todoId/' with 'priority' property in the body should return the 'Priority Updated' text as a response upon success
238 ms 
The PUT request to the path '/todos/:todoId/' with 'todo' property in the body should return the 'Todo Updated' text as a response upon success
215 ms 
The PUT request to the path '/todos/:todoId/' with 'category' property in the body should return the 'Category Updated' text as a response upon success
307 ms 
The PUT request to the path '/todos/:todoId/' with 'dueDate' property in the body should return the 'Due Date Updated' text as a response upon success
288 ms 
The database should be updated on the put request
5 ms 
The PUT request to the path '/todos/:todoId/' with invalid due date should return '400' as status code and 'Invalid Due Date' text as a response to the request
14 ms 
The PUT request to the path '/todos/:todoId/' with invalid status should return '400' as status code and 'Invalid Todo Status' text as a response to the request
6 ms 
The PUT request to the path '/todos/:todoId/' with invalid priority should return '400' as status code and 'Invalid Todo Priority' text as a response to the request
5 ms 
The PUT request to the path '/todos/:todoId/' with invalid category should return '400' as status code and 'Invalid Todo Category' text as a response to the request
4 ms 
The DELETE request to the path '/todos/:todoId/' should return 'Todo Deleted' text as a response upon success
214 ms 
The database should be updated on the delete request


Tests for Operations on Todo Application database

32
20
12
An Express instance should be exported from the 'app.js' file using the default export syntax
2 ms 
The GET request to the path '/todos/?status=TO%20DO' should return the list of all todos whose status is 'TO DO' as a response
32 ms 
The GET request to the path '/todos/?priority=HIGH' should return the list of all todos whose priority is 'HIGH' as a response
7 ms 
The GET request to the path '/todos/?priority=HIGH&status=IN%20PROGRESS' should return the list of all todos whose priority is 'HIGH' and status is 'IN PROGRESS' as a response
6 ms 
The GET request to the path '/todos/?category=WORK&status=DONE' should return the list of all todos whose category is 'WORK' and status is 'DONE' as a response
8 ms 
The GET request to the path '/todos/?category=LEARNING&priority=HIGH' should return the list of all todos whose category is 'LEARNING' and priority is 'HIGH' as a response
8 ms 
The GET request to the path '/todos/?category=HOME' should return the list of all todos whose category is 'HOME' as a response
5 ms 
The GET request to the path '/todos/?search_q=Buy' should return the list of all todos whose todo contains 'Buy' text as a response
7 ms 
The GET request to the path '/todos/:todoId/' should return a specific todo based on the todo ID as a response
4 ms 
The GET request to the path '/agenda/?date=:date' should return a list of all todos of the specific date as a response upon success
9 ms 
The GET request to the path '/todos/' with invalid todo status should return '400' as status code and 'Invalid Todo Status' text as a response to the request
5 ms 
The GET request to the path '/todos/' with invalid todo priority should return '400' as status code and 'Invalid Todo Priority' text as a response to the request
5 ms 
The GET request to the path '/todos/' with invalid todo category should return '400' as status code and 'Invalid Todo Category' text as a response to the request
4 ms 
The GET request to the path '/agenda/' with an invalid date query should return '400' as status code and 'Invalid Due Date' text as a response to the request
6 ms 
The POST request to the path '/todos/' should return the 'Todo Successfully Added' text as a response upon success
1222 ms 
The database should be updated on the post request
18 ms 
The POST request to the path '/todos/' with invalid todo status should return '400' as status code and 'Invalid Todo Status' text as a response to the request
210 ms 
The POST request to the path '/todos/' with invalid todo priority should return '400' as status code and 'Invalid Todo Priority' text as a response to the request
209 ms 
The POST request to the path '/todos/' with invalid todo category should return '400' as status code and 'Invalid Todo Category' text as a response to the request
212 ms 
The POST request to the path '/todos/' with invalid due date should return '400' as status code and 'Invalid Due Date' text as a response to the request
249 ms 
The PUT request to the path '/todos/:todoId/' with 'status' property in the body should return the 'Status Updated' text as a response upon success
214 ms 
The PUT request to the path '/todos/:todoId/' with 'priority' property in the body should return the 'Priority Updated' text as a response upon success
229 ms 
The PUT request to the path '/todos/:todoId/' with 'todo' property in the body should return the 'Todo Updated' text as a response upon success
222 ms 
The PUT request to the path '/todos/:todoId/' with 'category' property in the body should return the 'Category Updated' text as a response upon success
203 ms 
The PUT request to the path '/todos/:todoId/' with 'dueDate' property in the body should return the 'Due Date Updated' text as a response upon success
287 ms 
The database should be updated on the put request
4 ms 
The PUT request to the path '/todos/:todoId/' with invalid due date should return '400' as status code and 'Invalid Due Date' text as a response to the request
270 ms 
The PUT request to the path '/todos/:todoId/' with invalid status should return '400' as status code and 'Invalid Todo Status' text as a response to the request
242 ms 
The PUT request to the path '/todos/:todoId/' with invalid priority should return '400' as status code and 'Invalid Todo Priority' text as a response to the request
254 ms 
The PUT request to the path '/todos/:todoId/' with invalid category should return '400' as status code and 'Invalid Todo Category' text as a response to the request
243 ms 
The DELETE request to the path '/todos/:todoId/' should return 'Todo Deleted' text as a response upon success
1015 ms 
The database should be updated on the delete request



Total:32
27
5
Tests for Operations on Todo Application database

32
27
5
An Express instance should be exported from the 'app.js' file using the default export syntax
2 ms 
The GET request to the path '/todos/?status=TO%20DO' should return the list of all todos whose status is 'TO DO' as a response
29 ms 
The GET request to the path '/todos/?priority=HIGH' should return the list of all todos whose priority is 'HIGH' as a response
7 ms 
The GET request to the path '/todos/?priority=HIGH&status=IN%20PROGRESS' should return the list of all todos whose priority is 'HIGH' and status is 'IN PROGRESS' as a response
6 ms 
The GET request to the path '/todos/?category=WORK&status=DONE' should return the list of all todos whose category is 'WORK' and status is 'DONE' as a response
8 ms 
The GET request to the path '/todos/?category=LEARNING&priority=HIGH' should return the list of all todos whose category is 'LEARNING' and priority is 'HIGH' as a response
7 ms 
The GET request to the path '/todos/?category=HOME' should return the list of all todos whose category is 'HOME' as a response
6 ms 
The GET request to the path '/todos/?search_q=Buy' should return the list of all todos whose todo contains 'Buy' text as a response
12 ms 
The GET request to the path '/todos/:todoId/' should return a specific todo based on the todo ID as a response
4 ms 
The GET request to the path '/agenda/?date=:date' should return a list of all todos of the specific date as a response upon success
6 ms 
The GET request to the path '/todos/' with invalid todo status should return '400' as status code and 'Invalid Todo Status' text as a response to the request
8 ms 
The GET request to the path '/todos/' with invalid todo priority should return '400' as status code and 'Invalid Todo Priority' text as a response to the request
10 ms 
The GET request to the path '/todos/' with invalid todo category should return '400' as status code and 'Invalid Todo Category' text as a response to the request
7 ms 
The GET request to the path '/agenda/' with an invalid date query should return '400' as status code and 'Invalid Due Date' text as a response to the request
6 ms 
The POST request to the path '/todos/' should return the 'Todo Successfully Added' text as a response upon success
324 ms 
The database should be updated on the post request
2 ms 
The POST request to the path '/todos/' with invalid todo status should return '400' as status code and 'Invalid Todo Status' text as a response to the request
288 ms 
The POST request to the path '/todos/' with invalid todo priority should return '400' as status code and 'Invalid Todo Priority' text as a response to the request
308 ms 
The POST request to the path '/todos/' with invalid todo category should return '400' as status code and 'Invalid Todo Category' text as a response to the request
358 ms 
The POST request to the path '/todos/' with invalid due date should return '400' as status code and 'Invalid Due Date' text as a response to the request
30 ms 
The PUT request to the path '/todos/:todoId/' with 'status' property in the body should return the 'Status Updated' text as a response upon success
298 ms 
The PUT request to the path '/todos/:todoId/' with 'priority' property in the body should return the 'Priority Updated' text as a response upon success
352 ms 
The PUT request to the path '/todos/:todoId/' with 'todo' property in the body should return the 'Todo Updated' text as a response upon success
277 ms 
The PUT request to the path '/todos/:todoId/' with 'category' property in the body should return the 'Category Updated' text as a response upon success
332 ms 
The PUT request to the path '/todos/:todoId/' with 'dueDate' property in the body should return the 'Due Date Updated' text as a response upon success
372 ms 
The database should be updated on the put request
1 ms 
The PUT request to the path '/todos/:todoId/' with invalid due date should return '400' as status code and 'Invalid Due Date' text as a response to the request
4 ms 
The PUT request to the path '/todos/:todoId/' with invalid status should return '400' as status code and 'Invalid Todo Status' text as a response to the request
14 ms 
The PUT request to the path '/todos/:todoId/' with invalid priority should return '400' as status code and 'Invalid Todo Priority' text as a response to the request
7 ms 
The PUT request to the path '/todos/:todoId/' with invalid category should return '400' as status code and 'Invalid Todo Category' text as a response to the request
5 ms 
The DELETE request to the path '/todos/:todoId/' should return 'Todo Deleted' text as a response upon success
314 ms 
The database should be updated on the delete request
1 ms 


Total:32
28
4
Tests for Operations on Todo Application database

32
28
4
An Express instance should be exported from the 'app.js' file using the default export syntax
2 ms 
The GET request to the path '/todos/?status=TO%20DO' should return the list of all todos whose status is 'TO DO' as a response
30 ms 
The GET request to the path '/todos/?priority=HIGH' should return the list of all todos whose priority is 'HIGH' as a response
9 ms 
The GET request to the path '/todos/?priority=HIGH&status=IN%20PROGRESS' should return the list of all todos whose priority is 'HIGH' and status is 'IN PROGRESS' as a response
6 ms 
The GET request to the path '/todos/?category=WORK&status=DONE' should return the list of all todos whose category is 'WORK' and status is 'DONE' as a response
8 ms 
The GET request to the path '/todos/?category=LEARNING&priority=HIGH' should return the list of all todos whose category is 'LEARNING' and priority is 'HIGH' as a response
7 ms 
The GET request to the path '/todos/?category=HOME' should return the list of all todos whose category is 'HOME' as a response
7 ms 
The GET request to the path '/todos/?search_q=Buy' should return the list of all todos whose todo contains 'Buy' text as a response
6 ms 
The GET request to the path '/todos/:todoId/' should return a specific todo based on the todo ID as a response
4 ms 
The GET request to the path '/agenda/?date=:date' should return a list of all todos of the specific date as a response upon success
6 ms 
The GET request to the path '/todos/' with invalid todo status should return '400' as status code and 'Invalid Todo Status' text as a response to the request
6 ms 
The GET request to the path '/todos/' with invalid todo priority should return '400' as status code and 'Invalid Todo Priority' text as a response to the request
4 ms 
The GET request to the path '/todos/' with invalid todo category should return '400' as status code and 'Invalid Todo Category' text as a response to the request
6 ms 
The GET request to the path '/agenda/' with an invalid date query should return '400' as status code and 'Invalid Due Date' text as a response to the request
8 ms 
The POST request to the path '/todos/' should return the 'Todo Successfully Added' text as a response upon success
375 ms 
The database should be updated on the post request
4 ms 
The POST request to the path '/todos/' with invalid todo status should return '400' as status code and 'Invalid Todo Status' text as a response to the request
5007 ms 
The POST request to the path '/todos/' with invalid todo priority should return '400' as status code and 'Invalid Todo Priority' text as a response to the request
5006 ms 
The POST request to the path '/todos/' with invalid todo category should return '400' as status code and 'Invalid Todo Category' text as a response to the request
5008 ms 
The POST request to the path '/todos/' with invalid due date should return '400' as status code and 'Invalid Due Date' text as a response to the request
5006 ms 
The PUT request to the path '/todos/:todoId/' with 'status' property in the body should return the 'Status Updated' text as a response upon success
238 ms 
The PUT request to the path '/todos/:todoId/' with 'priority' property in the body should return the 'Priority Updated' text as a response upon success
260 ms 
The PUT request to the path '/todos/:todoId/' with 'todo' property in the body should return the 'Todo Updated' text as a response upon success
217 ms 
The PUT request to the path '/todos/:todoId/' with 'category' property in the body should return the 'Category Updated' text as a response upon success
211 ms 
The PUT request to the path '/todos/:todoId/' with 'dueDate' property in the body should return the 'Due Date Updated' text as a response upon success
205 ms 
The database should be updated on the put request
7 ms 
The PUT request to the path '/todos/:todoId/' with invalid due date should return '400' as status code and 'Invalid Due Date' text as a response to the request
16 ms 
The PUT request to the path '/todos/:todoId/' with invalid status should return '400' as status code and 'Invalid Todo Status' text as a response to the request
8 ms 
The PUT request to the path '/todos/:todoId/' with invalid priority should return '400' as status code and 'Invalid Todo Priority' text as a response to the request
7 ms 
The PUT request to the path '/todos/:todoId/' with invalid category should return '400' as status code and 'Invalid Todo Category' text as a response to the request
5 ms 
The DELETE request to the path '/todos/:todoId/' should return 'Todo Deleted' text as a response upon success
217 ms 
The database should be updated on the delete request
1 ms 